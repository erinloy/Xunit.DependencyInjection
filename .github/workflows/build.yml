name: build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  unix-build:
    name: Running tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.x
          8.x
    - name: build
      run: dotnet build -c Release -v n /p:TreatWarningsAsErrors=True
    - name: test
      run: dotnet test -c Release ./test/Xunit.DependencyInjection.Test/Xunit.DependencyInjection.Test.csproj
    - name: 'dotnet test aspnetcore'
      run: dotnet test -c Release ./test/Xunit.DependencyInjection.Test.AspNetCore/Xunit.DependencyInjection.Test.AspNetCore.csproj

  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.x
          8.x
    - name: build
      run: dotnet build -c Release -v n /p:TreatWarningsAsErrors=True
    - name: test
      run: |
        dotnet test ./test/Xunit.DependencyInjection.Test/Xunit.DependencyInjection.Test.csproj
        dotnet test ./test/Xunit.DependencyInjection.Test.AspNetCore/Xunit.DependencyInjection.Test.AspNetCore.csproj
        dotnet test ./test/Xunit.DependencyInjection.Analyzer.Test/Xunit.DependencyInjection.Analyzer.Test.csproj
        dotnet test ./test/Xunit.DependencyInjection.Test.FSharp/Xunit.DependencyInjection.Test.FSharp.fsproj
